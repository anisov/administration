# -*- mode: ruby -*-
# vim: set ft=ruby :


MACHINES = {
  :inetRouter => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, auto_config: false, virtualbox__intnet: "router-net"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: "router-net"},
                ]
  },
  :centralRouter => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, auto_config: false, virtualbox__intnet: "router-net"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: "router-net"},
	                 {adapter: 4, auto_config: false, virtualbox__intnet: "central-router-net"},
	                 {adapter: 5, auto_config: false, virtualbox__intnet: "central-router-net"}
                ]
  },
  
  :testRouter1 => {
        :box_name => "centos/7",
        :net => [
				           {adapter: 2, auto_config: false, virtualbox__intnet: "central-router-net"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: "first-net"}
                ]
  },

  :testRouter2 => {
        :box_name => "centos/7",
        :net => [
				           {adapter: 2, auto_config: false, virtualbox__intnet: "central-router-net"},
                   {adapter: 3, auto_config: false, virtualbox__intnet: "second-net"}
                ]
  },

  :testClient1 => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, auto_config: false, virtualbox__intnet: "first-net"}
                ]
  },
  
  :testServer1 => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, auto_config: false, virtualbox__intnet: "first-net"}
                ]
  },

  :testClient2 => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, auto_config: false, virtualbox__intnet: "second-net"}
                ]
  },
  
  :testServer2 => {
        :box_name => "centos/7",
        :net => [
                   {adapter: 2, auto_config: false, virtualbox__intnet: "second-net"}
                ]
  },
}

Vagrant.configure("2") do |config|
  
  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

      box.vm.box = boxconfig[:box_name]
      box.vm.host_name = boxname.to_s

      boxconfig[:net].each do |ipconf|
        box.vm.network "private_network", ipconf
      end
      
      if boxconfig.key?(:public)
        box.vm.network "public_network", boxconfig[:public]
      end

      box.vm.provision "shell", inline: <<-SHELL
        mkdir -p ~root/.ssh
              cp ~vagrant/.ssh/auth* ~root/.ssh
      SHELL
      
      case boxname.to_s
        when "inetRouter"
          box.vm.provision "ansible" do |ansible|
          ansible.playbook = "./inetRouter/playbook.yml"
        end
        when "centralRouter"
          box.vm.provision "ansible" do |ansible|
          ansible.playbook = "./centralRouter/playbook.yml"
        end
        when "testRouter1"
          box.vm.provision "ansible" do |ansible|
          ansible.playbook = "./testRouter1/playbook.yml"
        end
        when "testRouter2"
          box.vm.provision "ansible" do |ansible|
          ansible.playbook = "testRouter2/playbook.yml"
        end
        when "testClient1"
          box.vm.provision "ansible" do |ansible|
          ansible.playbook = "./testClient1/playbook.yml"
        end
        when "testServer1"
          box.vm.provision "ansible" do |ansible|
          ansible.playbook = "./testServer1/playbook.yml"
        end
        when "testClient2"
          box.vm.provision "ansible" do |ansible|
          ansible.playbook = "./testClient2/playbook.yml"
        end
        when "testServer2"
          box.vm.provision "ansible" do |ansible|
          ansible.playbook = "./testServer2/playbook.yml"
        end
      end
    end
  end
end