# -*- mode: ruby -*-
# vim: set ft=ruby :
home = ENV['HOME'] # Используем глобальную переменную $HOME

MACHINES = {
  :backupserver => {
    :box_name => "centos/7",
    :box_version => "1804.02",
    :ip_addr => '192.168.11.101',
    :cpus => 3,
    :memory => "3072",
    :disks => {
        :sata1 => {
            :dfile => home + '/VirtualBox VMs/lvm/backupborg.vdi',
            :size => 1024, # Megabytes
            :port => 1
        },
    }
  },
  :client => {
    :box_name => "centos/7",
    :box_version => "1804.02",
    :ip_addr => '192.168.11.100',
    :cpus => 3,
    :memory => "3072",
    :disks => {
        :sata1 => {
            :dfile => home + '/VirtualBox VMs/clientborg.vdi',
            :size => 1024, # Megabytes
            :port => 1
        },
    }
  },
}

Vagrant.configure("2") do |config|
  MACHINES.each do |boxname, boxconfig|
    config.vm.define boxname do |box|
      box.vm.box = boxconfig[:box_name]
      box.vm.box_version = boxconfig[:box_version]
      box.vm.host_name = boxname.to_s
      box.vm.network "private_network", ip: boxconfig[:ip_addr]

      box.vm.provider :virtualbox do |vb|
        vb.cpus = boxconfig[:cpus]
        vb.memory = boxconfig[:memory]
        needsController = false
        boxconfig[:disks].each do |dname, dconf|
          unless File.exist?(dconf[:dfile])
            vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
            needsController =  true
          end
        end
        if needsController == true
          vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
          boxconfig[:disks].each do |dname, dconf|
              vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
          end
        end
      end
      box.vm.provision "shell", inline: <<-SHELL
        yum install -y epel-release
        yum install -y borgbackup
      SHELL
      if boxname.to_s == "backupserver"
        box.vm.provision "shell", inline: <<-SHELL
          yum install -y borgbackup
          useradd -m borg
          echo test1234 | passwd borg --stdin
          
          sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
          systemctl restart sshd

          mkdir -p /var/backup
          mkfs.xfs -q /dev/sdb
          mount /dev/sdb /var/backup
          chown -R borg:borg /var/backup
        SHELL
      end
      if boxname.to_s == "client"
        box.vm.provision "shell", inline: <<-SHELL
          yum install logrotate sshpass -y
          ssh-keygen -b 2048 -t rsa -q -N '' -f ~/.ssh/id_rsa
          sshpass -p test1234 ssh-copy-id -o StrictHostKeyChecking=no borg@192.168.11.101
          borg init -e none borg@192.168.11.101:/var/backup/
          
          cp /vagrant/borg.service /etc/systemd/system/borg.service
          cp /vagrant/borg.timer /etc/systemd/system/borg.timer

          systemctl daemon-reload
          systemctl enable borg.service
          systemctl enable borg.timer
          systemctl start borg.service
          systemctl start borg.timer
          
          cp /vagrant/log_borg.conf /etc/logrotate.d/log_borg
          echo 
        SHELL
      end
    end
  end
end